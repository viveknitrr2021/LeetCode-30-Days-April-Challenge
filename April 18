//Minimum Path Sum
//https://leetcode.com/explore/featured/card/30-day-leetcoding-challenge/530/week-3/3303/


class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        long long m=grid.size();
        long long n=grid[0].size();
        for(long long i=1;i<n;i++){
            grid[0][i]+=grid[0][i-1];
        }
        for(long long i=1;i<m;i++){
           grid[i][0]+=grid[i-1][0]; 
        }
        for(long long i=1;i<m;i++){
            for(long long j=1;j<n;j++){
                grid[i][j]+=min(grid[i-1][j],grid[i][j-1]);
            }
        }
        return grid[m-1][n-1];
    }
};
