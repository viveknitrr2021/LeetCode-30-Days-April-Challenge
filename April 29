//Binary Tree Maximum Path Sum
//https://leetcode.com/explore/challenge/card/30-day-leetcoding-challenge/532/week-5/3314/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res = INT_MIN;
    int find(TreeNode* node){
        if(node==NULL) return 0;
        int l=0,r=0;
        if(node->left) l = find(node->left);
        if(node->right) r = find(node->right);
        
        int ans = max(node->val,node->val + max(l,r));
        res = max(res,max(node->val+l+r,ans));
        return ans;
    }
    int maxPathSum(TreeNode* root) {
        find(root);
        return res;
    }
};
