//Number of Islands
//https://leetcode.com/explore/challenge/card/30-day-leetcoding-challenge/530/week-3/3302/

class Solution {
public:
    int vis[1000][1000];
    int p[4]={1,-1,0,0};
    int q[4]={0,0,1,-1};
    int n,m;
    bool issafe(int x,int y,vector<vector<char>>& grid){
        if(x>=0 and y>=0 and x<n and y<m and grid[x][y]=='1') return true;
        return false;
    }
    void dfs(vector<vector<char>>& grid,int i,int j){
        vis[i][j]=1;
        for(int k=0;k<4;k++){
            int x=i+p[k];
            int y=j+q[k];
            if(issafe(x,y,grid) and vis[x][y]==0) dfs(grid,x,y);
        }
        return;
    }
    int numIslands(vector<vector<char>>& grid) {
        n=grid.size();
        if(n==0) return 0;
        m=grid[0].size();
        int cnt=0;memset(vis,0,sizeof(vis));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]==0 and grid[i][j]=='1'){
                    cnt++;
                    dfs(grid,i,j);
                }
            }
        }
        return cnt;
    }
};
