//Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree
//https://leetcode.com/explore/challenge/card/30-day-leetcoding-challenge/532/week-5/3315/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> v;
    void call(TreeNode* root,vector<int> vt){
        vt.push_back(root->val);
        if(root->left==NULL and root->right==NULL){
            v.push_back(vt);
            return;
        }
        if(root->left != NULL) call(root->left,vt);
        if(root->right != NULL) call(root->right,vt);
    }
    bool isValidSequence(TreeNode* root, vector<int>& arr) {
        vector<int> vt;
        if(root==NULL and arr.size()) return false;
        if(root==NULL and arr.size()==0) return true; 
        call(root,vt);
        for(int i=0;i<v.size();i++){
            if(v[i]==arr) return true;
        }
        return false;
    }
};
